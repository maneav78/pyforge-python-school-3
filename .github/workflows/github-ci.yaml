name: CI

on:
  push:
    branches:
      - 'main'
      - 'fix-branch'

jobs:
  testing:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Docker-compose
        run: docker-compose up --build -d
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          MAIN_DATABASE_URL: ${{ secrets.MAIN_DATABASE_URL }}
          TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
          TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}

      - name: Checking Containers
        run: docker ps 

      - name: Wait for container to stabilize
        run: sleep 5

      - name: Analyzing logs
        run: |
          chmod +x analyzing_logs.sh 
          ./analyzing_logs.sh

  flake8:
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
            python-version: 3.11.9
            architecture: x64

      - name: Checkout PyTorch
        uses: actions/checkout@master

      - name: Install flake8
        run: pip install flake8

      - name: Run flake8
        uses: suo/flake8-github-action@releases/v1
        with:
          checkName: 'flake8' 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: testing

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configuration
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install SSH client
        run: sudo apt-get install -y openssh-client
 
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy files to EC2    
        run: |
          scp -o StrictHostKeyChecking=no -r * ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USERNAME }}/app

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22  
          script: |
            cd /home/${{ secrets.SSH_USERNAME }}/app
            chmod +x deploy.sh
            ./deploy.sh

      - name: View application logs
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} \
          "docker compose logs"
            
      - name: Clean up
        run: |
          rm -f private_key.pem
    
